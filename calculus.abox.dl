// deduction rules for ABox reasoning

#include "preparation.abox.dl"

// transform concept assertions into nested sequents
gci_nested(all, noma, s, top, c) :- ca_nf(s, c, a), ind2nom(a, noma), is_top(top), is_all(all).

// additional deduction rules for ABox reasoning

// movement along hierarchies
// (S.3)
ra_nf(s, r, a1, a2) :- ra_nf(u, r, a1, a2), sharper_nf(s, u).

// individual-based inferences
// (A.1)
gci_nested(all, noma, s, b, c) :- gci_nested(_, top, s, b, c), is_nom(noma), is_all(all), is_top(top).

// (A.2)
gci_nested(all, top, s, noma, c) :- gci_nested(_, noma, s, top, c), is_nom(noma), is_all(all), is_top(top).

// (A.3)
gci_nested(all, noma, s, b, c) :- gci_nested(_, noma, s, b, c), is_nom(noma), is_all(all).

// roles
// (A.4)
ra_nf(s, r1, a1, a2) :- ra_nf(s, r, a1, a2), ria2(s, r, r1).

// (A.5)
ra_nf(s, r3, a1, a3) :- ra_nf(s, r1, a1, a2), ra_nf(s, r2, a2, a3), ria3(s, r1, r2, r3).

// existential quantifiers
// (A.6)
gci_nf_existential_right(s, noma, r, c) :- ra_nf(s, r, a, b), ind2nom(a, noma), ind2nom(b, nomb), gci_nested(_, nomb, s, top, c), is_top(top).

// (A.7)
gci_nf_existential_right(s, noma, r3, c) :- ra_nf(s, r1, a, b), ind2nom(a, noma), ind2nom(b, nomb), gci_nf_existential_right(s, nomb, r2, c), ria3(s, r1, r2, r3).

// (A.8)
gci_nf_existential_right(s, noma, r3, c) :- ra_nf(s, r1, a, b), ind2nom(a, noma), ind2nom(b, nomb), gci_nested(_, nomb, s, top, d), gci_nf_existential_right(s, d, r2, c), ria3(s, r1, r2, r3), is_top(top).